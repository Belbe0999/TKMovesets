#pragma once

#include <map>

#include "MovesetConverters.hpp"

#include "GameTypes.h"

// Aliases for extraprops andrequirements
// Will be built from cg_propertyAliases, attempts to guess unknown values in between known values
 std::map<unsigned int, s_propAlias> MovesetConverter::T5DRToT7::InitAliasDictionary()
{
	return std::map<unsigned int, s_propAlias> {
		{ 0, { .target_id = 72 }},
		{ 2, {.target_id = 3 } },
		{ 3, {.target_id = 4 } },
		{ 4, {.target_id = 5 } },
		{ 5, {.target_id = 6 } },
		{ 6, {.target_id = 7 } },
		{ 10, {.target_id = 11 } },
		{ 11, {.target_id = 12 } },
		{ 12, {.target_id = 13 } },
		{ 13, {.target_id = 14 } },
		{ 14, {.target_id = 15 } },
		{ 15, {.target_id = 16 } },
		{ 16, {.target_id = 17 } },
		{ 17, {.target_id = 18 } },
		{ 22, {.target_id = 23 } },
		{ 23, {.target_id = 24 } },
		{ 24, {.target_id = 25 } },
		{ 25, {.target_id = 26 } },
		{ 26, {.target_id = 27 } },
		{ 27, {.target_id = 28 } },
		{ 30, {.target_id = 31 } },
		{ 31, {.target_id = 32 } },
		{ 34, {.target_id = 35 } },
		{ 35, {.target_id = 36 } },
		{ 42, {.target_id = 44 } },
		{ 43, {.target_id = 47 } },
		{ 44, {.target_id = 48 } },
		{ 46, {.target_id = 62 } },
		{ 50, {.target_id = 66 } },
		{ 55, {.target_id = 71 } },
		{ 57, {.target_id = 72 } },
		{ 62, {.target_id = 77 } },
		{ 65, {.target_id = 80 } },
		{ 66, {.target_id = 81 } },
		{ 69, {.target_id = 84 } },
		{ 70, {.target_id = 85 } },
		{ 71, {.target_id = 86 } },
		{ 72, {.target_id = 87 } },
		{ 73, {.target_id = 96 } },
		{ 78, {.target_id = 100 } },
		{ 85, {.target_id = 107 } },
		{ 92, {.target_id = 114 } },
		{ 99, {.target_id = 124 } },
		{ 101, {.target_id = 126 } },
		{ 105, {.target_id = 130 } },
		{ 106, {.target_id = 131 } },
		{ 107, {.target_id = 132 } },
		{ 108, {.target_id = 133 } },
		{ 109, {.target_id = 134 } },
		{ 110, {.target_id = 135 } },
		{ 113, {.target_id = 146 } },
		{ 114, {.target_id = 147 } },
		{ 115, {.target_id = 148 } },
		{ 116, {.target_id = 149 } },
		{ 117, {.target_id = 150 } },
		{ 118, {.target_id = 151 } },
		{ 124, {.target_id = 164 } },
		{ 125, {.target_id = 165 } },
		{ 126, {.target_id = 167 } },
		{ 127, {.target_id = 135 } },
		{ 128, {.target_id = 182 } },
		{ 135, {.target_id = 182 } },
		{ 142, {.target_id = 216 } },
		{ 143, {.target_id = 217 } },
		{ 151, {.target_id = 225 } },
		{ 170, {.target_id = 253 } },
		{ 177, {.target_id = 289 } },
		{ 182, {.target_id = 319 } },
		{ 187, {.target_id = 329 } },
		{ 189, {.target_id = 352 } },
		{ 190, {.target_id = 357 } },
		{ 208, {.target_id = 422 } },
		{ 236, {.target_id = 552 } },
		{ 286, {.target_id = 614 } },
		{ 292, {.target_id = 813 } },
		{ 293, {.target_id = 814 } },
		{ 294, {.target_id = 815 } },
		{ 295, {.target_id = 816 } },
		{ 296, {.target_id = 816 } },
		{ 327, {.target_id = 881 } },
		{ 0x8002, {.target_id = 0x8002 } },
		{ 0x8019, {.target_id = 0x8019 } },
		{ 0x8048, {.target_id = 0x8048 } },
		{ 0x804b, {.target_id = 0x804b } },
		{ 0x8053, {.target_id = 0x8053 } },
		{ 0x805a, {.target_id = 0x805a } },
		{ 0x807b, {.target_id = 0x807b } },
		{ 0x8088, {.target_id = 0x8088 } },
		{ 0x8089, {.target_id = 0x8089 } },
		{ 0x808b, {.target_id = 0x808b } },
		{ 0x80bc, {.target_id = 0x80bc } },
		{ 0x8162, {.target_id = 0x8162 } },
	};
}
